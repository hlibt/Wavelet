#include <cmath>
#include "../CollocationPoint.hpp"

void seed_grid(CollocationPoint** collPnt) {

    for (j=0;j<=J;j++) {                                         	    // 
        int N = ( jPnts(j) - 1 ) / 2;                                   //
        for (k=-N;k<=N;k++) {                                          	//
            double x = 2. * pow(2.,-(j+shift)) * k;                     // x-locations of each collocation point
            collPnt[j][k+N].x = x;                                      // populate the dyadic grid
            collPnt[j][k+N].u = init_condition(x);                      // sample the initial condition
            collPnt[j][k+n].isMask = true;                              // initially treat all points as in the mask
            if ( (k+N)%2==1 ) collPnt[j][k+N].isOdd = true;             // specifiy odd points (for wavelets/detail coefficients)
        }                                                       	    //
    }                                                           	    //
}
